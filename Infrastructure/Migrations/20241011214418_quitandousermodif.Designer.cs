// <auto-generated />
using System;
using BHDSeguros.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BHDSeguros.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20241011214418_quitandousermodif")]
    partial class quitandousermodif
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BHDSeguros.Domain.Entities.Client.ClientEntitie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientIdentification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("BHDSeguros.Domain.Entities.Client.ClientSecureEntitie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Policy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SecurePlansId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("SecurePlansId");

                    b.ToTable("ClientSecure");
                });

            modelBuilder.Entity("BHDSeguros.Domain.Entities.SecureApplications.ProductTypeEntitie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AllowedProductType");
                });

            modelBuilder.Entity("BHDSeguros.Domain.Entities.SecureApplications.SecureApplicationsEntitie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SecurePlansId")
                        .HasColumnType("int");

                    b.Property<int>("SolicitudStatus")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("SecurePlansId");

                    b.ToTable("SecureApplications");
                });

            modelBuilder.Entity("BHDSeguros.Domain.Entities.SecureApplications.SecureCodeEntitie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecureCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SecureCode");
                });

            modelBuilder.Entity("BHDSeguros.Domain.Entities.SecureApplications.SecureCodeProductTypeEntitie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SecureCodeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("SecureCodeId");

                    b.ToTable("ProductTypeSecureCode");
                });

            modelBuilder.Entity("BHDSeguros.Domain.Entities.SecureApplications.SecurePlansEntitie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxAge")
                        .HasColumnType("int");

                    b.Property<int>("MinAge")
                        .HasColumnType("int");

                    b.Property<decimal>("PlanFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PlansCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlansName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SecureCodeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SecureCodeId");

                    b.ToTable("SecurePlans");
                });

            modelBuilder.Entity("BHDSeguros.Domain.Entities.Client.ClientSecureEntitie", b =>
                {
                    b.HasOne("BHDSeguros.Domain.Entities.Client.ClientEntitie", "Client")
                        .WithMany("ClientSecure")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BHDSeguros.Domain.Entities.SecureApplications.SecurePlansEntitie", "SecurePlans")
                        .WithMany("ClientSecure")
                        .HasForeignKey("SecurePlansId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("SecurePlans");
                });

            modelBuilder.Entity("BHDSeguros.Domain.Entities.SecureApplications.SecureApplicationsEntitie", b =>
                {
                    b.HasOne("BHDSeguros.Domain.Entities.Client.ClientEntitie", "Client")
                        .WithMany("ClientApplications")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BHDSeguros.Domain.Entities.SecureApplications.ProductTypeEntitie", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BHDSeguros.Domain.Entities.SecureApplications.SecurePlansEntitie", "SecurePlans")
                        .WithMany("SecureApplications")
                        .HasForeignKey("SecurePlansId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("ProductType");

                    b.Navigation("SecurePlans");
                });

            modelBuilder.Entity("BHDSeguros.Domain.Entities.SecureApplications.SecureCodeProductTypeEntitie", b =>
                {
                    b.HasOne("BHDSeguros.Domain.Entities.SecureApplications.ProductTypeEntitie", "ProductType")
                        .WithMany("SeguroEntitieList")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BHDSeguros.Domain.Entities.SecureApplications.SecureCodeEntitie", "SecureCode")
                        .WithMany("ProductType")
                        .HasForeignKey("SecureCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");

                    b.Navigation("SecureCode");
                });

            modelBuilder.Entity("BHDSeguros.Domain.Entities.SecureApplications.SecurePlansEntitie", b =>
                {
                    b.HasOne("BHDSeguros.Domain.Entities.SecureApplications.SecureCodeEntitie", "SecureCode")
                        .WithMany()
                        .HasForeignKey("SecureCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SecureCode");
                });

            modelBuilder.Entity("BHDSeguros.Domain.Entities.Client.ClientEntitie", b =>
                {
                    b.Navigation("ClientApplications");

                    b.Navigation("ClientSecure");
                });

            modelBuilder.Entity("BHDSeguros.Domain.Entities.SecureApplications.ProductTypeEntitie", b =>
                {
                    b.Navigation("SeguroEntitieList");
                });

            modelBuilder.Entity("BHDSeguros.Domain.Entities.SecureApplications.SecureCodeEntitie", b =>
                {
                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("BHDSeguros.Domain.Entities.SecureApplications.SecurePlansEntitie", b =>
                {
                    b.Navigation("ClientSecure");

                    b.Navigation("SecureApplications");
                });
#pragma warning restore 612, 618
        }
    }
}
